{"version":3,"sources":["../src/script_closed_loop_load_explanation.js"],"names":["requestIDs","modalObj","getExplanation","reID","Ajax","call","methodname","args","requestid","done","explanationContent","setBody","Notification","exception","Error","fail","loadModal","Str","get_string","then","title","ModalFactory","create","type","types","CANCEL","body","large","scrollable","modal","setButtonText","show","catch","buttonClickEvent","event","element","target","nodeName","elementID","getAttribute","startsWith","replace","includes","init","requestids","document","addEventListener","e"],"mappings":"uhBAsBA,OACA,OACA,OACA,O,yiBAEIA,CAAAA,C,CACAC,C,CAaEC,CAAc,CAAG,SAACC,CAAD,CAAU,CAC7BC,CAAI,CAACC,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,2CADL,CAEPC,IAAI,CAAE,CACFC,SAAS,CAAEL,CADT,CAFC,CAIPM,IAAI,CAAE,cAASC,CAAT,CAA6B,CAC3B,GAAgB,IAAb,GAAAT,CAAH,CAAqB,CACjBA,CAAQ,CAACU,OAAT,CAAiBD,CAAjB,CACH,CAFD,IAGI,CACAE,CAAY,CAACC,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,mDAAV,CAAvB,CACH,CACJ,CAXE,CAYPC,IAAI,CAAEH,CAAY,CAACC,SAZZ,CAAD,CAAV,CAcH,C,CAOKG,CAAS,CAAG,SAACb,CAAD,CAAS,CACvBc,CAAG,CAACC,UAAJ,CAAe,kBAAf,CAAmC,2BAAnC,EAAgEC,IAAhE,CAAqE,SAASC,CAAT,CAAgB,CACjFC,CAAY,CAACC,MAAb,CAAoB,CACRC,IAAI,CAAEF,CAAY,CAACG,KAAb,CAAmBC,MADjB,CAERL,KAAK,CAAEA,CAFC,CAGRM,IAAI,oFAHI,CAIRC,KAAK,GAJG,CAKRC,UAAU,GALF,CAApB,EAOaT,IAPb,CAOkB,SAAAU,CAAK,CAAI,CACXA,CAAK,CAACC,aAAN,CAAoB,QAApB,CAA8B,OAA9B,EACAD,CAAK,CAACE,IAAN,GACA9B,CAAQ,CAAG4B,CAAX,CACA3B,CAAc,CAACC,CAAD,CACjB,CAZb,CAaH,CAdD,EAcG6B,KAdH,CAcS,UAAW,CAChBpB,CAAY,CAACC,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,4BAAV,CAAvB,CACH,CAhBD,CAiBH,C,CAMKmB,CAAgB,CAAG,SAACC,CAAD,CAAU,CAC/B,GAAIC,CAAAA,CAAO,CAAGD,CAAK,CAACE,MAApB,CACA,GAAwB,QAArB,GAAAD,CAAO,CAACE,QAAX,CAAiC,CAC7B,MACH,CACD,GAAIC,CAAAA,CAAS,CAAGH,CAAO,CAACI,YAAR,CAAqB,IAArB,CAAhB,CACA,GAAG,CAACD,CAAS,CAACE,UAAV,CAAqB,oBAArB,CAAJ,CAA+C,CAC3C,MACH,CACD,GAAIrC,CAAAA,CAAI,CAAGmC,CAAS,CAACG,OAAV,CAAkB,oBAAlB,CAAwC,EAAxC,CAAX,CACA,GAAGzC,CAAU,CAAC0C,QAAX,CAAoBvC,CAApB,CAAH,CAA6B,CACzBa,CAAS,CAACb,CAAD,CACZ,CACJ,C,QAMmB,QAAPwC,CAAAA,IAAO,CAACC,CAAD,CAAgB,CAChC5C,CAAU,CAAG4C,CAAb,CACAC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmC,SAACC,CAAD,CAAO,CAACd,CAAgB,CAACc,CAAD,CAAK,CAAhE,CACH,C","sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Show explanation in modal\n * @copyright  2022 Rene Hilgemann\n * @author     Rene Hilgemann <rene.hilgemann@stud.uni-due.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Ajax from 'core/ajax';\nimport * as ModalFactory from 'core/modal_factory';\nimport * as Str from 'core/str';\nimport * as Notification from 'core/notification';\n\nvar requestIDs;\nvar modalObj;\n\n//Spinner for time during loading\nconst spinner = '<p class=\"text-center\">'\n        + '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i>'\n        + '</p>';\n\n\n/**\n *\n * @param {Integer} reID\n * @returns {undefined}\n */\nconst getExplanation = (reID) => {\n    Ajax.call([{\n        methodname: 'block_closed_loop_support_get_explanation',\n        args: {\n            requestid: reID},\n        done: function(explanationContent) {\n                if(modalObj !== null){\n                    modalObj.setBody(explanationContent);\n                }\n                else{\n                    Notification.exception(new Error('Failed to load explanation, cause modal not found'));\n                }\n            },\n        fail: Notification.exception\n    }]);\n};\n\n/**\n *\n * @param {Integer} reID\n * @returns {undefined}\n */\nconst loadModal = (reID) =>{\n    Str.get_string('explainShowTitle', 'block_closed_loop_support').then(function(title) {\n        ModalFactory.create({\n                    type: ModalFactory.types.CANCEL,\n                    title: title,\n                    body: spinner,\n                    large: false,\n                    scrollable: true\n                    })\n                    .then(modal => {\n                        modal.setButtonText('cancel', 'Close');\n                        modal.show();\n                        modalObj = modal;\n                        getExplanation(reID);\n                    });\n    }).catch(function() {\n        Notification.exception(new Error('Failed to load HeaderTitle'));\n    });\n};\n\n/**\n * Setting up\n * @param {Object} event\n */\nconst buttonClickEvent = (event) =>{\n    var element = event.target;\n    if(element.nodeName !== 'BUTTON'){\n        return;\n    }\n    var elementID = element.getAttribute('id');\n    if(!elementID.startsWith('explanationButton_')){\n        return;\n    }\n    var reID = elementID.replace('explanationButton_', '');console.log('3' + elementID);\n    if(requestIDs.includes(reID)){\n        loadModal(reID);\n    }\n};\n\n/**\n * Setting up\n * @param {Array} requestids\n */\nexport const init = (requestids) => {\n    requestIDs = requestids;\n    document.addEventListener('click', (e) => {buttonClickEvent(e);});\n};"],"file":"script_closed_loop_load_explanation.min.js"}